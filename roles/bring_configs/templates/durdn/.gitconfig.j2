[user]
  name = Oleksandr Kovalevskyi
  email = oleksandr_kovalevskyi@epam.com
[diff]
  tool = meld
[difftool]
  prompt = no

[alias]

#List commits in short form, with colors and branch/tag annotations.
ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate

#List commits showing changed files
ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat

#List with no colors if you need to chain the out put with Unix pipes
lnc = log --pretty=format:"%h\\ %s\\ [%cn]"

#List oneline commits showing dates:
lds = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short

#List oneline commits showing relative dates:
ld = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative

#And closing the listing aliases, here is the default look for short git log:
le = log --oneline --decorate

#Show the history of a file, with diffs
filelog = log -u
fl = log -u

# Show modified files in last commit:
dl = "!git ll -1"

#Show a diff last commit:
dlc = diff --cached HEAD^

#Show content (full diff) of a commit given a revision
dr  = "!f() { git diff "$1"^.."$1"; }; f"
lc  = "!f() { git ll "$1"^.."$1"; }; f"
diffr  = "!f() { git diff "$1"^.."$1"; }; f"

#Find a file path in codebase: #Example usage: git f trenches
f = "!git ls-files | grep -i"

#output all your aliases:
la = "!git config -l | grep alias | cut -c 7-"
